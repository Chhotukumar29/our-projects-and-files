
CREATE DATABASE INTELLIPAAT
USE INTELLIPAAT

CREATE TABLE STUDIES
(
 PNAME VARCHAR(50),
 INSTITUTE VARCHAR(50),
 COURSE VARCHAR(50),
 COURSE_FEE INT
 )

 INSERT INTO STUDIES VALUES 
 ('ANAND','SABHARI','PGDCA',4500),
 ('ALTAF','COIT','DCA',7200),
 ('JULIANA','BDPS','MCA',22000),
 ('KAMALA','PRAGATHI','DCA',5000),
 ('MARY','SABHARI','PGDCA',4500),
 ('NELSON','PRAGATHI','DAP',6200),
 ('PATRICK','PRAGATHI','DCAP',5200),
 ('QADIR','APPLE','HDCA',14000),
 ('RAMESH','SABHARI','PGDCA',4500),
 ('REBACCA','BRILLIANT','DCAP',11000),
 ('REMITHA','BDPS','DCS',6000),
 ('REVATHI','SABHARI','DAP',5000),
 ('VIJAYA','BDPS','DCA',48000)

 CREATE TABLE SOFTWARE
 (
  PNAME VARCHAR(50),
  TITLE VARCHAR(50),
  DEVELOPIN VARCHAR(50),
  SCOST NUMERIC(7,2),
  DCOST INT,
  SOLD  INT
  )

  INSERT INTO SOFTWARE VALUES 
  ('MARY','README','CPP',300,1200,84),
  ('ANAND','PARACHUTES','BASIC',399.95,6000,43),
  ('ANAND','VIDEOTITLING','PASCAL',7500,16000,9),
  ('JULIANA','INVENTORY','COBOL',3000,3500,0),
  ('KAMALA','PAYROLL PKG','DBASE',9000,20000,7),
  ('MARY','FINANCIAL ACCT.','ORACLE',18000,85000,4),
  ('MARY','CODE GENERATOR','C',4500,20000,23),
  ('PATTRICK','README','CPP',300,1200,83),
  ('QADIR','BOMBS AWAY','ASSEMBLY',750,3000,11),
  ('QADIR','VACCINES','C',1900,3100,21),
  ('RAMESH','HOTEL MGMT.','DBASE',3000,35000,4),
  ('RAMESH','DEAD LEE','PASCAL',599.95,4500,73),
  ('REMITHA','PC UTILITIES','C',725,5000,51),
  ('REMITHA','TSR HELP PKG.','ASSEMBLY',2500,6000,7),
  ('REVATHI','HOSPITAL MGMT.','PASCAL',1100,75000,2),
  ('VIJAYA','TSR EDITOR','C',900,700,6)

  SELECT * FROM SOFTWARE

  CREATE TABLE PROGRAMMER
  (
    PNAME VARCHAR(50),
	DOB   DATETIME,
	DOJ   DATETIME,
	GENDER VARCHAR(50),
	PROF1 VARCHAR(50),
	PROF2 VARCHAR(50),
	SALARY INT
	)

	INSERT INTO PROGRAMMER VALUES
	('ANAND','12-APR-66','21-APR-92','M','PASCAL','BASIC',3200),
	('ALTAF','02-JUL-64','13-NOV-90','M','CLIPPER','COBOL',2800),
	('JULIANA','31-JAN-60','21-APR-90','F','COBOL','DBASE',3000),
	('KAMALA','30-OCT-68','02-JAN-92','F','C','DBASE',2900),
	('MARY','24-JUN-70','01-FEB-91','F','CPP','ORACLE',4500),
	('NELSON','11-SEP-85','11-OCT-89','M','COBOL','DBASE',2500),
	('PATTRICK','10-NOV-65','21-APR-90','M','PASCAL','CLIPPER',2800),
	('QADIR','31-AUG-65','21-APR-91','M','ASSEMBLY','C',3000),
	('RAMESH','03-MAY-67','28-FEB-91','M','PASCAL','DBASE',3200),
	('REBECCA','01-JAN-67','01-DEC-90','F','BASIC','COBOL',2500),
	('REMITHA','19-APR-70','20-APR-93','F','C','ASSEMBLY',3600),
	('REVATHI','02-DEC-69','02-JAN-92','F','PASCAL','BASIC',3700),
	('VIJAYA','14-DEC-65','02-MAY-92','F','FOXPRO','C',350)

	SELECT * FROM PROGRAMMER 


--QUERY1: Find Out the selling cost AVG for packages developed in Pascals.
SELECT AVG(SCOST) AS AVERAGE_COST FROM SOFTWARE WHERE DEVELOPIN='PASCAL'
--QUERY2: Display Names,Ages of all Programmers.
SELECT PNAME,DATEDIFF(YEAR,DOB,GETDATE()) AS AGE FROM PROGRAMMER
--QUERY3: Display the Names of those who have done the DAP course.
SELECT PNAME FROM STUDIES WHERE COURSE = 'DAP'
--QUERY4: Display the Names and Date of Births of all programmers born in January.
SELECT PNAME,DOB FROM PROGRAMMER WHERE MONTH(DOB)='01'
--QUERY5:What is the Highest number of copies sold by a package.
SELECT MAX(SOLD) FROM SOFTWARE
--QUERY6:Display lowest course fee.
SELECT MIN(COURSE_FEE) FROM STUDIES
--QUERY7:How many Programmers done the PGDCA Course?
SELECT COUNT(*) FROM STUDIES WHERE COURSE IN ('PGDCA')
--QUERY8:How much revenue has been earned through sales of packagesdeveloped in C?
--REVENUE=NO OF UNITS SOLD * AVG PRICE 
SELECT SUM(SOLD*SCOST) FROM SOFTWARE as REVENUE WHERE DEVELOPIN IN ('C')
--QUERY9:Display the details of the software developed by Ramesh.
SELECT * FROM SOFTWARE WHERE PNAME ='RAMESH'
--QUERY10:HOW MANY PROGRAMMERS STUDIED AT SABHARI?
SELECT COUNT(PNAME) FROM STUDIES WHERE INSTITUTE='SABHARI'
--QUERY11:DISPLAY DETAILS OF PACKAGES WHOSE SALES CROSSED THE 2000 MARK.
SELECT * FROM SOFTWARE WHERE (SOLD*SCOST)>2000
--QUERY12: DISPLAY THE DETAILS OF PACKAGES FOR WHICH DEVELOPMENT COST HAVE BEEN RECOVERED.
SELECT * FROM SOFTWARE WHERE SCOST>DCOST
--QUERY13: WHAT IS THE COST OF THE COSTLIEST SOFTWARE DEVELOPMENT  IN BASIC?
SELECT MAX(DCOST) FROM SOFTWARE WHERE DEVELOPIN='BASIC'
--QUERY14:HOW MANY PACKAGES DEVELOPED IN DBASE?
SELECT COUNT(DEVELOPIN) FROM SOFTWARE WHERE DEVELOPIN IN ('DBASE')
--QUERY15: HOW MANY PROGRAMMERS STUDIED IN PRAGATHI?
SELECT COUNT(*) FROM STUDIES WHERE INSTITUTE='PRAGATHI'
--QUERY16: HOW MANY PROGRAMMERS PAID 5000 TO 10000 FOR THEIR COURSE?
SELECT COUNT(PNAME) FROM STUDIES WHERE COURSE_FEE >=5000 OR COURSE_FEE <=1000
--QUERY17: WHAT IS AVG COURSE FEE?
SELECT AVG(COURSE_FEE)AS AVG_COURSE_FEE FROM STUDIES
--QUERY18:DISPLAY THE NAMES OF PROGRAMMERS KNOWING C.
SELECT PNAME FROM SOFTWARE WHERE DEVELOPIN ='C'
--QUERY19:HOW MANY PROGRAMMERS KNOW EITHER COBOL OR PASCAL?
SELECT COUNT(*) FROM SOFTWARE WHERE DEVELOPIN ='COBOL'OR DEVELOPIN = 'PASCAL'
--OR
--QUERY20: HOW MANY PROGRAMMERS DONT KNOW PASCAL AND C?
SELECT COUNT(*) FROM SOFTWARE WHERE DEVELOPIN NOT IN ('PASCAL','C')
--QUERY21: HOW OLD IS OLDEST MALE PROGRAMMER?
SELECT MAX(OLDEST_MALE_PROGRAMMER) FROM
(
SELECT*, DATEDIFF(YEAR,DOB,GETDATE()) AS OLDEST_MALE_PROGRAMMER FROM PROGRAMMER WHERE GENDER='M'
)T
--22: WHAT IS THE AVG AGE OF FEMALE PROGRAMMERS?
SELECT AVG(FEMALE_AGE) FROM
(
SELECT*, DATEDIFF(YEAR,DOB,GETDATE()) AS FEMALE_AGE FROM PROGRAMMER WHERE GENDER='F'
)T
--23:CALCULATE THE EXPERIENCE IN YEARS FOR EACH PROGRAMMER AND DISPLAY WITH THEIR NAMES IN DESCENDING ORDER.
SELECT*, DATEDIFF(YEAR,DOJ,GETDATE()) AS EXPERIENCE FROM PROGRAMMER ORDER BY PNAME DESC
--24:WHO ARE THE PROGRAMMERS WHO CELEBRATE THEIR BIRTHDAY'S DURING THE CURRENT MONTH?
SELECT PNAME,DOB FROM PROGRAMMER WHERE MONTH(DOB) = MONTH(GETDATE())
--25:HOW MANY FEMALE PROGRAMMERS ARE THERE?
SELECT COUNT(*) FROM PROGRAMMER WHERE GENDER='F'
--26:WHAT ARE THE LANGUAGES STUDIED BY MALE PROGRAMMERS.
SELECT DISTINCT PROF1 FROM PROGRAMMER 
UNION
SELECT DISTINCT PROF2 FROM PROGRAMMER
--27:WHAT IS THE AVG SALARY?
SELECT AVG(SALARY) AS AVG_SALARY FROM PROGRAMMER
--28:HOW MANY PEOPLE DRAW SALARY 2000 TO 4000?
SELECT COUNT(*) FROM PROGRAMMER WHERE SALARY>=2000 AND SALARY<=4000
--29:DISPLAY THE DETAILS OF THOSE WHO DONT KNOW CLIPPER ,COBOL OR PASCAL.
SELECT * FROM PROGRAMMER WHERE PROF1 NOT IN ('CLIPPER','COBOL','PASCAL') AND PROF2 NOT IN ('CLIPPER','COBOL','PASCAL')
--30:DISPLAY THE COST OF PACKAGE DEVELOPED BY EACH PROGRAMMER.
SELECT TITLE,SUM(DCOST) FROM SOFTWARE GROUP BY TITLE
--QUERY31:DISPLAY THE SALES VALUES OF THE PACKAGES DEVELOPED BY THE EACH PROGRAMMER.
SELECT TITLE,SUM(SCOST) AS PACKAGE_COST FROM SOFTWARE GROUP BY TITLE
--QUERY32:DISPLAY THE NUMBER OF PACKAGES SOLD BY EACH PROGRAMMER.
SELECT PNAME,SUM(SOLD) AS [NO OF PACKAGES] FROM SOFTWARE GROUP BY PNAME
--QUERY33:DISPLAY THE SALES COST OF THE PACKAGES DEVELOPED BY EACH PROGRAMMER LANGUAGE WISE.
SELECT DEVELOPIN,SUM(SCOST) AS [TOTAL COST] FROM SOFTWARE GROUP BY DEVELOPIN
--QUERY34:DISPLAY EACH LANGUAGE NAME WITH AVG DEVELOPMENT COST,AVG SELLING COST AND AVG PRICE PER COPY.
SELECT DEVELOPIN, AVG(DCOST) AS [AVERAGE DEVELOPMENT COST],AVG(SCOST*SOLD) AS [AVERAGE SCOST], AVG(SCOST)AS [AVG PRICE PER COPY] FROM SOFTWARE GROUP BY DEVELOPIN
--QUERY35:DISPLAY EACH PROGRAMMER'S NAME,COSTLIEST AND CHEAPEST PACKAGES DEVELOPED BY HIM OR HER.
SELECT PNAME, MAX(DCOST) AS [COSTLIEST PACKAGE],MIN(DCOST) AS [CHEAPEST PACKAGE] FROM SOFTWARE GROUP BY PNAME
--QUERY36:DISPLAY EACH INSTITUTE NAME WITH NUMBER OF COURSES ,AVERAGE COST PER COURSE.
SELECT INSTITUTE,COUNT(COURSE) AS [NO OF COURSES],AVG(COURSE_FEE)AS [ AVERAGE COST PER COURSE] FROM STUDIES GROUP BY INSTITUTE
--QUERY37:DISPLAY EACH INSTITUTE WITH NO OF STUDENTS.
SELECT INSTITUTE,COUNT(PNAME) AS [ NO OF STUDENTS] FROM STUDIES GROUP BY INSTITUTE
--QUERY38:DISPLAY NAMES OF MALE AND FEMALES PROGRAMMERS . GENDER ALSO.
SELECT PNAME,GENDER FROM PROGRAMMER ORDER BY GENDER
--QUERY39:DISPLAY THE NAME OF PROGRAMMERS AND THEIR PACKAGES ALSO.
SELECT PNAME,TITLE FROM SOFTWARE ORDER BY PNAME,TITLE
--QUERY40:DISPLAY NO OF PACKAGES IN EACH LANGUAGES EXCEPT C AND C++.
SELECT COUNT(TITLE) AS [NO OF PACKAGES] FROM SOFTWARE WHERE DEVELOPIN NOT IN ('C','CPP')
--QUERY41:DISPLAY THE NO OF PACKAGES IN EACH LANGUAGE FOR WHICH DCOST IS LESS THEN 1000.
SELECT COUNT(TITLE) FROM SOFTWARE WHERE DCOST< 1000
--QUERY42:DISPLAY AVG DIFFERENCE BETWEEN SCOST,DCOST FOR EACH PACKAGE.
SELECT TITLE,AVG(DCOST-SCOST) AS AVG_DIFFERENCE FROM SOFTWARE GROUP BY TITLE
--QUERY43:DISPLAY THE TOTAL SCOST,DCOST AND AMOUNT TO BE RECOVERED FOR EACH PROGRAMMER FOR THOSE WHOSE COST HAS NOT YET BEEN RECOVERED.
SELECT PNAME,SUM(SCOST) AS TTL_SCOST, SUM(DCOST) AS TTL_DCOST, SUM(DCOST-(SOLD*SCOST)) AS RECOVERED FROM SOFTWARE GROUP BY PNAME HAVING SUM(DCOST)>SUM(SOLD*SCOST)
--QUERY44: DISPLAY HIGHEST,LOWEST AND AVERAGE SALARIES FOR THOSE EARNINGS MORE THAN 2000
SELECT MAX(SALARY) AS HIGHEST, MIN(SALARY) AS LOWEST ,AVG(SALARY) AS AVG_SALARY FROM PROGRAMMER WHERE SALARY>2000
--QUERY45: WHO IS HIGHEST PAID 'C' PROGRAMMER?
SELECT TOP 1 PNAME,MAX(SALARY)AS MM_SALARY FROM PROGRAMMER WHERE PROF1='C' OR PROF2='C' GROUP BY PNAME ORDER BY MM_SALARY DESC
--QUERY46: WHO IS HIGHEST PAID FEMALE COBOL PROGRAMMER?
SELECT * FROM PROGRAMMER WHERE SALARY=(SELECT MAX(SALARY) FROM PROGRAMMER WHERE PROF1='COBOL' OR PROF2='COBOL' AND GENDER='F')
--OUERY47:DISPLAY THE NAMES OF HIGHEST PAID PROGRAMMERS FOR EACH LANGUAGE.
SELECT DISTINCT PNAME,PROF1 FROM PROGRAMMER WHERE SALARY IN (SELECT MAX(SALARY) FROM PROGRAMMER GROUP BY PROF1)
--QUERY48:WHO IS THE LEAST EXPERIENCED PROGRAMMER.
SELECT TOP 1 PNAME,MIN(YEAR(GETDATE())-YEAR(DOJ)) AS EXPERIENCE FROM PROGRAMMER GROUP BY PNAME ORDER BY EXPERIENCE
--QUERY49:WHO IS THE MOST EXPERIENCED MALE PROGRAMMER KNOWING PASCAL
WITH TBL AS
(SELECT  PNAME,GENDER,YEAR(GETDATE())-YEAR(DOJ) AS EXPERIENCE FROM PROGRAMMER WHERE PROF1='PASCAL'OR PROF2='PASCAL' AND GENDER='M')
SELECT TOP 1 * FROM TBL ORDER BY EXPERIENCE DESC
--QUERY50:WHICH LANGUAGE IS KNOWN BY ONLY ONE PROGRAMMER?
SELECT PROF1 FROM PROGRAMMER GROUP BY PROF1 HAVING PROF1 NOT IN ( SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1
UNION
SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING PROF2 NOT IN ( SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1
--QUERY51:WHO IS THE ABOVE PROGRAMMER REFERRED IN 50?
SELECT P1.PNAME,P1.PROF1,PROF2 FROM PROGRAMMER P1
INNER JOIN(
SELECT PROF1 FROM PROGRAMMER GROUP BY PROF1 HAVING  PROF1 NOT IN(SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1
UNION
SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING PROF2 NOT IN (SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1)P2
ON P1.PROF1=P2.PROF1
--QUERY52: WHO IS THE YOUNGEST PROGRAMMER KNOWING DBASE?
SELECT TOP 1 PNAME,(YEAR(GETDATE())-YEAR(DOB)) AS AGE FROM PROGRAMMER WHERE PROF1='DBASE' OR PROF2='DBASE' ORDER BY AGE ASC
--QUERY53: WHICH FEMALE PROGRAMMER EARNING MORE THAN 3000 DOES NOT KNOW C,C++, ORACLE OR DBASE?
SELECT PNAME, GENDER FROM PROGRAMMER WHERE SALARY>3000 AND GENDER='F' AND (PROF1 NOT IN ('C','CPP','ORACLE','DBASE') OR PROF2 NOT IN ('C','CPP','ORACLE','DBASE'))
--QUERY54: WHICH INSTITUTE HAS MOST NUMBER OF STUDENTS?
SELECT TOP 1
S1.INSTITUTE,COUNT(PNAME) AS STUDENTS_NO FROM STUDIES AS S1 GROUP BY INSTITUTE ORDER BY STUDENTS_NO DESC
--QUERY55: WHAT IS COSTLIEST COURSE?
SELECT COURSE FROM STUDIES WHERE COURSE_FEE=(SELECT MAX(COURSE_FEE) FROM STUDIES)
--QUERY56:WHICH COURSE HAS BEEN DONE BY THE MOST OF THE STUDENTS?
SELECT TOP 1 WITH TIES 
S1.COURSE,COUNT(PNAME) AS [NO OF STUDENTS] FROM STUDIES AS S1
GROUP BY COURSE ORDER BY [NO OF STUDENTS] DESC
--QUERY57:WHICH INSTITUTE CONDUCTS COSTLIEST COURSE
SELECT INSTITUTE FROM STUDIES WHERE COURSE_FEE=(SELECT MAX(COURSE_FEE) FROM STUDIES)
--QUERY58:DISPLAY THE NAME OF THE INSTITUTE AND COURSE,WHICH HAS BELOW AVG COURSE FEE.
SELECT INSTITUTE,COURSE FROM STUDIES WHERE COURSE_FEE<(SELECT AVG(COURSE_FEE) FROM STUDIES)
--QUERY59:SELECT DISPLAY THE NAMES OF THE COURSES WHOSE FEES ARE WITHIN 1000(+ OR-) OF THE AVERAGE FEE
SELECT COURSE FROM STUDIES WHERE COURSE_FEE<(SELECT AVG(COURSE_FEE) +1000 FROM STUDIES) AND COURSE_FEE<((SELECT AVG(COURSE_FEE) -1000 FROM STUDIES))
--QUERY60:WHICH PACKAGE HAS THE HIGHEST DEVELOPMENT COST?
SELECT TITLE FROM SOFTWARE WHERE DCOST=(SELECT MAX(DCOST) FROM SOFTWARE)

--QUERY61: WHICH COURSE HAS BELOW AVG NUMBER OF STUDENTS?
SELECT COURSE FROM STUDIES GROUP BY COURSE HAVING COUNT(PNAME)<(SELECT AVG(TB.COUNT_PNAME) FROM (SELECT COUNT(PNAME) AS COUNT_PNAME FROM STUDIES)TB)

--QUERY62: WHICH PACKAGE HAS THE LOWEST SELLING COST?
SELECT TITLE,SCOST FROM SOFTWARE WHERE SCOST=(SELECT MIN(SCOST) FROM SOFTWARE)

--QUERY63:WHO DEVELOPED THE PACKAGE THAT HAS SOLD THE LEAST NUMBER OF COPIES?
SELECT PNAME,SOLD FROM SOFTWARE WHERE SOLD=(SELECT MIN(SOLD) FROM SOFTWARE)

--QUERY64:WHICH LANGUAGE HAS USED TO DEVELOP THE PACKAGE , WHICH HAS THE HIGHEST SALES AMOUNT>
SELECT DEVELOPIN FROM SOFTWARE WHERE SCOST=(SELECT MAX(SCOST) FROM SOFTWARE)

--QUERY65:HOW MANY COPIES OF PACKAGE THAT HAS THE LEAST DIFFERENCE BETWEEN DEVELOPMENT AND SELLING COST 
SELECT SOLD,TITLE FROM SOFTWARE WHERE (DCOST-SCOST)=(SELECT MIN(DCOST-SCOST) FROM SOFTWARE)

--QUERY66:WHICH IS THE COSTLIEST PACKAGE DEVELOPED IN PASCAL.
SELECT TOP 1 TITLE,MAX(DCOST) AS COSTLIEST FROM SOFTWARE WHERE DEVELOPIN ='PASCAL' GROUP BY TITLE ORDER BY COSTLIEST DESC

--QUERY67: WHICH LANGUAGE WAS USED TO DEVELOP THE MOST NUMBER OF PACKAGES?
SELECT TOP 1 WITH TIES DEVELOPIN,COUNT(*) AS [NO OF PACKAGES] FROM SOFTWARE GROUP BY DEVELOPIN ORDER BY COUNT(*) DESC

--QUERY:68 WHICH PROGRAMMER HAS DEVELOPED THE HIGHEST NUMBER OF PACKAGES?
SELECT TOP 1 WITH TIES PNAME,COUNT(TITLE) AS [NO OF PACK.] FROM SOFTWARE GROUP BY PNAME ORDER BY [NO OF PACK.] 

--QUERY69: WHOMIS THE AUTHOR OF COSTLIEST PACKAGE?
SELECT PNAME FROM SOFTWARE WHERE DCOST =(SELECT MAX(DCOST) FROM SOFTWARE)

--QUERY70: DISPLAY THE NAMES OF THE PACKAGES , WHICH HAVE SOLD LESS THAN THE AVG NUMBER OF COPIES.
SELECT TITLE FROM SOFTWARE WHERE SOLD<(SELECT AVG(SOLD) FROM SOFTWARE) GROUP BY TITLE

--QUERY71:WHO ARE THE AUTHORS OF THE PACKAGES,WHICH HAVE RECOVERED MORE THAN DOUBLE THE DEVELOPMENT COST?
SELECT PNAME FROM SOFTWARE WHERE (SOLD*SCOST)>(2*DCOST) GROUP BY PNAME

--QUERY72:DISPLAY THE PROGRAMMER NAME AND THE CHEAPEST PACKAGES DEVELOPED BY THEM IN EACH LANGUAGE.
SELECT PNAME,TITLE FROM SOFTWARE WHERE DCOST IN (SELECT MIN(DCOST) FROM SOFTWARE GROUP BY DEVELOPIN)

--QUERY73: DISPLAY THE LANGUAGE USED BY EACH ORIGRAMMER TO DEVELOP THE HIGHEST SELLING AND LOWEST SELLING PACKAGE.
SELECT DISTINCT PNAME,DEVELOPIN FROM SOFTWARE WHERE SOLD IN ( SELECT MAX(SOLD) FROM SOFTWARE GROUP BY PNAME)
UNION
SELECT DISTINCT PNAME,DEVELOPIN FROM SOFTWARE WHERE SOLD IN (SELECT MIN(SOLD) FROM SOFTWARE GROUP BY PNAME)

--QUERY74: WHO IS THE YOUNGEST MALE PROGRAMMER BORN IN 1965?
SELECT PNAME,DOB FROM PROGRAMMER WHERE GENDER='M' AND YEAR(DOB)='1965' ORDER BY DOB DESC

--QUERY75: WHO IS THE OLDEST FEMALE PROGRAMMER WHO JOINED IN 1992?
SELECT TOP 1 PNAME,DOJ,DOB,GENDER FROM PROGRAMMER WHERE GENDER='F' AND YEAR(DOJ)='1992' ORDER BY DOB ASC
--QUERY76: IN WHICH YEAR WAS THE MOST NUMBER OF PROGRAMMERS BORN.
SELECT TOP 1 WITH TIES YEAR(DOB) AS BORNYEAR,COUNT(*) AS [NO OF PROGRAMMERS] FROM PROGRAMMER GROUP BY YEAR(DOB) ORDER BY [NO OF PROGRAMMERS] DESC
--QUERY77: IN WHICH MONTH DID MOST NO OF PROGRAMMERS JOINED?
SELECT TOP 1 WITH TIES MONTH(DOJ) AS BORN_MONTH,COUNT(PNAME) AS [NO OF PROGRAMMERS] FROM PROGRAMMER GROUP BY MONTH(DOJ) ORDER BY [NO OF PROGRAMMERS] DESC
--QUERY78:IN WHICH LANGUAGE ARE MOST OF THE PROGRAMMER PROFICIENT
WITH TEMP AS 
( SELECT PROF1,COUNT(PROF1) AS COUNT_PROF1 FROM PROGRAMMER GROUP BY PROF1
UNION
SELECT PROF2,COUNT(PROF2) AS COUNT_PROF2 FROM PROGRAMMER GROUP BY PROF2)
SELECT TOP 1 WITH TIES * FROM TEMP ORDER BY COUNT_PROF1 DESC 
--QUERY79: WHO ARE THE MALE PROGRAMERS EARNING BELOW THW AVG SALARY OF FEMALE PROGRAMMERS?
SELECT PNAME,GENDER,SALARY FROM PROGRAMMER WHERE GENDER='M' AND SALARY<(SELECT AVG(SALARY) FROM PROGRAMMER WHERE GENDER='F')
--QUERY80: WHO ARE THE FEMALE PROGRAMMERS EARNING MORE THAN THE HIGHEST PAID?
SELECT PNAME FROM PROGRAMMER WHERE GENDER='F' AND SALARY>(SELECT MAX(SALARY) FROM PROGRAMMER)
--QUERY81:WHICH LANGUAGE HAS BEEN STATED AS THE PROFICIENCY BY THE MOST OF THE PROGRAMMERS?
WITH TEMP AS 
(SELECT PROF1,COUNT(PROF1) AS COUNT_PROF1 FROM PROGRAMMER GROUP BY PROF1
UNION
SELECT PROF2,COUNT(PROF2) AS COUNT_PROF2 FROM PROGRAMMER GROUP BY PROF2)
SELECT TOP 1 WITH TIES * FROM TEMP ORDER BY COUNT_PROF1 DESC
--QUERY82:DISPLAY THE DETAILS OF THOSE WHO ARE DRAWING THE SAME SALARY
SELECT * FROM PROGRAMMER WHERE SALARY=
ANY(SELECT SALARY FROM PROGRAMMER P GROUP BY SALARY HAVING COUNT(*)>1) ORDER BY SALARY
--QUERY83:DISPLAY THE DETAILS OF THE SOFTWARE DEVELOPED BY THE MALE PROGRAMMERS EARNING MORE THAN 3000/-
SELECT S.* FROM PROGRAMMER P,SOFTWARE S WHERE S.PNAME=P.PNAME AND SALARY>3000 AND GENDER='M'
--QUERY84:DISPLAY THE DETAILS OF THE PACKAGES DEVELOPED IN PASCAL BY THE FEMALE PROGRAMMERS.
SELECT S.* FROM PROGRAMMER P,SOFTWARE S WHERE P.PNAME=S.PNAME AND DEVELOPIN='PASCAL' AND GENDER='F'
--QUERY85: DISPLAY THE DETAILS OF PROGRAMMERS WHO JOINED BEFORE 1990.
SELECT* FROM PROGRAMMER WHERE YEAR(DOJ)<1990
--QUERY86:DISPLAY THE DETAILS OF THE SOFTWARE DEVELOPED IN C BY FEMALE PROGRAMMERS OF PRAGATHI.
SELECT S.* FROM SOFTWARE S, PROGRAMMER P, STUDIES STD WHERE S.PNAME=P.PNAME AND P.PNAME=STD.PNAME AND GENDER='F' AND INSTITUTE='PRAGATHI' AND DEVELOPIN='C'
--QUERY87: DISPLAY THE NUMBER OF PACKAGES ,NO.OF COPIES SOLD AND SALES VALUE OF EACH PROGRAMMER INSTITUTE WISE.
SELECT STD.INSTITUTE,COUNT(S.TITLE) AS [NO OF PCKG],COUNT(S.SOLD) AS [NO OF COPIES],SUM(S.SOLD*S.SCOST) AS SALES FROM SOFTWARE S,STUDIES STD WHERE S.PNAME=STD.PNAME GROUP BY STD.INSTITUTE
--QUERY88: DISPLAY THE DETAILS OF THE SOFTWARE DEVELOPED IN DBASE BY MALE PRGRAMMERS WHO BELONG TO THE INSTITUTE IN WHICH MOST NUMBER OF PROGRAMMERS STUDIED.
SELECT S.*,P.GENDER,STD.INSTITUTE from SOFTWARE S, STUDIES STD ,PROGRAMMER P WHERE P.PNAME =S.PNAME AND S.PNAME=STD.PNAME AND STD.PNAME=P.PNAME AND S.DEVELOPIN='DBASE' AND GENDER='M' AND STD.INSTITUTE IN (SELECT INSTITUTE FROM STUDIES GROUP BY INSTITUTE HAVING COUNT(INSTITUTE)>=ANY(SELECT COUNT(INSTITUTE) FROM STUDIES GROUP BY INSTITUTE))
--QUERY89: DISPLAY THE DETAILS OF THE SOFTWARE DEVELOPED BY THE MALE PROGRAMMERS BORN BEFORE 1965 AND FEMALE PROGRAMMERS BORN AFTER 1975
SELECT S.*,P.GENDER FROM SOFTWARE S,PROGRAMMER P WHERE S.PNAME=P.PNAME AND GENDER='M' AND YEAR(DOB)>1965
UNION
SELECT S.*,P.GENDER FROM SOFTWARE S, PROGRAMMER P WHERE S.PNAME=P.PNAME AND GENDER='F' AND YEAR(DOB)>1975  
--QUERY90:DISPLAY THE DETAILS OF THE SOFTWARE THAT HAS DEVELOPED IN THE LANGUAGE WHICH IS NEITHWE THE FIRST NOR THE SECOND PROFICIENCY OF THE PROGRAMMERS.
SELECT S.* FROM SOFTWARE S, PROGRAMMER P WHERE S.PNAME=P.PNAME AND DEVELOPIN<> PROF1 AND DEVELOPIN <> PROF2
--QUERY91: DISPLAY THE DETAILS OF THE SOFTWARE DEVELOPED BY THE MALE STUDENTS OF SABHARI.
SELECT S.* FROM SOFTWARE S, STUDIES STD , PROGRAMMER P
WHERE P.PNAME=S.PNAME AND STD.PNAME=P.PNAME AND GENDER='M' AND INSTITUTE='SABHARI'
--QUERY92: DISPLAY THE NAMES OF THE PROGRAMMERS WHO HAVE NOT DEVELOPED ANY PACKAGES.
SELECT PNAME FROM PROGRAMMER WHERE PNAME NOT IN ( SELECT PNAME FROM SOFTWARE)
--QUERY93: WHAT IS THE TOTAL COST OF THE SOFTWARE DEVELPOED BY THE PROGRAMMERS OF APPLE?
SELECT SUM(SCOST) FROM SOFTWARE S,STUDIES STD WHERE S.PNAME=STD.PNAME AND STD.INSTITUTE='APPLE'
--QUERY94:WHO ARE THE PROGRAMMERS WHO JOINED ON THE SAME DAY?
SELECT PNAME FROM PROGRAMMER WHERE DOJ= ANY( SELECT DOJ FROM PROGRAMMER GROUP BY DOJ HAVING COUNT(DOJ)>1)
--QUERY95: WHO ARE THE PROGRAMMERS WHO HAVE THE SAME PROF2?
SELECT PNAME FROM PROGRAMMER WHERE PROF2= ANY(SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING COUNT(PROF2)>1)
--QUERY96: DISPLAY THE TOTAL SALES VALUE OF THE SOFTWARE ,INSTITUTE WISE
SELECT STD.INSTITUTE,SUM(S.SCOST*S.SOLD) AS SALES FROM SOFTWARE S, STUDIES STD WHERE STD.PNAME=S.PNAME GROUP BY INSTITUTE
--QUERY97: IN WHICH INSTITUTE DOES THE PERSON WHO DEVELOPED THE COSTLIEST PACKAGE STUDIED.
SELECT INSTITUTE FROM SOFTWARE S, STUDIES STD WHERE S.PNAME=STD.PNAME GROUP BY INSTITUTE,DCOST HAVING MAX(DCOST)=(SELECT MAX(DCOST) FROM SOFTWARE)
--QUERY98:WHICH LANGUAGE LISTED IN PROF1,PROF2 HAS NOT BEEN USED TO DEVELOP ANY PACKAGE.
SELECT PROF1 FROM PROGRAMMER WHERE PROF1 NOT IN (SELECT DEVELOPIN FROM SOFTWARE)
UNION
SELECT PROF2 FROM PROGRAMMER WHERE PROF2 NOT IN ( SELECT DEVELOPIN FROM SOFTWARE)
--QUERY99: HOW MUCH DOES THE PERSON WHO DEVELOPED THE HIGHEST SELLING PACKAGE EARN AND WHAT COURSE DID HE/SHE UNDERGO.
SELECT P.SALARY,STD.COURSE FROM PROGRAMMER P, SOFTWARE S, STUDIES STD WHERE P.PNAME=S.PNAME AND S.PNAME=STD.PNAME AND SCOST=(SELECT MAX(SCOST) FROM SOFTWARE)
--QUERY100: WHAT IS THE AVG SALARY FOR THOSE WHOSE SOFTWARE SALES IS MORE THAN 50,000/-
SELECT AVG(SALARY) AS AVRGSALARY,PNAME FROM PROGRAMMER WHERE PNAME IN ( SELECT PNAME FROM SOFTWARE WHERE(SCOST*SOLD)>50000) GROUP BY PNAME
--QUERY101;HOW MANY PACKAGES WERE DEVELOPED BY STUDENTS, WHO STUDIED IN INSTITUTE THAT CHARGE THE LOWEST COURSE FEE?
SELECT COUNT(STD.PNAME) AS [NO OF PKGS] FROM SOFTWARE S, STUDIES STD WHERE S.PNAME=STD.PNAME GROUP BY S.PNAME,COURSE_FEE HAVING MIN(COURSE_FEE)=(SELECT MIN(COURSE_FEE) FROM STUDIES)
--QUERY102: HOW MANY PACKGS. WERE DEVELOPED BY THE PERSON WHO DEVELOPED THE CHEAPEST PACKAGE,WHERE DID HE/SHE STUDY?
SELECT COUNT(*) FROM PROGRAMMER P, SOFTWARE S,STUDIES STD WHERE S.PNAME=P.PNAME GROUP BY DEVELOPIN HAVING MIN(DCOST)=(SELECT MIN(DCOST) FROM SOFTWARE)
--QUERY103: HOW MANY PACKAGES WERE DEVELOPED BY THE FEMALE PROGRAMMERS EARNING MORE THAN THE HIGHEST PAID MALE PROGRAMMER?
SELECT COUNT(DEVELOPIN) FROM PROGRAMMER P, SOFTWARE S WHERE S.PNAME=P.PNAME AND GENDER='F' AND SALARY>(SELECT MAX(SALARY) FROM PROGRAMMER P, SOFTWARE S WHERE S.PNAME=P.PNAME AND GENDER='M')
--QUERY104: HOW MANY PACKAGES ARE DEVELOPED BY THE MOST EXPERIENCED PROGRAMMER FROM BDPS.
SELECT COUNT(*) AS [PACKAGE] FROM SOFTWARE S,PROGRAMMER P WHERE P.PNAME=S.PNAME GROUP BY DOJ HAVING MAX(DOJ)=(SELECT MAX(DOJ) FROM STUDIES STD, PROGRAMMER P, SOFTWARE S
WHERE P.PNAME=S.PNAME AND STD.PNAME=P.PNAME AND (INSTITUTE='BDPS'))
--QUERY105: LIST THE PROGRAMMERS ( FROM SOFTWARE TABLE) AND THE INSTITUTES THEY STUDIES
SELECT PNAME,INSTITUTE FROM STUDIES WHERE PNAME  IN (SELECT PNAME FROM SOFTWARE)
--QUERY106: LIST EACH PROF WITH NO OF PROGRAMMERS HAVING THAT PROF AND THE NUMBER OF THE PACKAGES IN THAT PROF.
SELECT P.PROF1,P.PROF2,COUNT(P.PNAME) AS [NUMBER OF PROGRAMMERS ],S.TITLE FROM PROGRAMMER P
INNER JOIN
SOFTWARE S ON P.PROF1=S.DEVELOPIN
INNER JOIN
SOFTWARE S1 ON P.PROF2=S1.DEVELOPIN GROUP BY P.PROF1,P.PROF2,P.PNAME,S.TITLE
--query107:LIST THE PROGRAMMER NAMES( FROM THE PROGRAMMER TABLE) AND NO OF PKGS. EACH HAS DEVELOPED.
SELECT P.PNAME,COUNT(DEVELOPIN) AS COUNTD FROM SOFTWARE S,PROGRAMMER P WHERE P.PNAME=S.PNAME GROUP BY P.PNAME